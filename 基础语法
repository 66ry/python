一：基础语法
#注释  ''' '''不改变输出句式结构
二：变量类型 int float 列表【】 元组（） 字典{} 元组不允许更新 查类型用type 类型转换在转换的地方加变量类型
三：运算符：整数相除得整数，想得到小数把一个改为浮点数就行 位运算符：&与 |或  ^异或 -取反  逻辑运算符：and与 or或 not非  成员运算符：in在里面 not in不在里面 身份运算符：判断是不是引用一个对象 is is not
四：条件语句 if...else....  python 不支持switch语句多个条件判断只能用elif
五：循环语句：for循环又叫重复循环语句 和while循环判断正确执行语句  python中没有do...while...循环，循环控制语句break,continue。pop()函数用于移除列表中的一个元素（默认最后一个元素并返回该值）,append()在列表末尾添加新的对象，while中使用if while..else
六：for循环语句：
input()输出的是字符串 加减需要字符转换
str-->int int(a) 如果是’3.3‘是字符串还带小数点转为int时出错
str float()
float-->int() 会把小数点后的位数去掉
当变量的值是零和空字符串转布尔为falase   bool
运算符
算术运算符 +——*/
print(a,b,c)输出结果之间是空格，让输出之间不是空格用sep='#'更改如print(a,b,c,sep='#')之间是井号，箭头指向为下一行因为有print(a,b,c,end='\n')不让箭头指向下一行去\n
print(2/3)结果有小数点 print(//)整除 print(a**b)a的b次方，print(%)取余2%3=1
如键盘输入个位十位百位
print(123%10)个位
print（123//10%10）十位
print(123//100)百位
对一个数字求个十百千等的方法：%10得各位 依次//整除再%，最后一位直接整除他的1000倍数；
赋值运算符
+=，-=，//=
比较关系运算符
>= != is 字符串的比较是不相同的asc码值
逻辑运算符与或非
and or not结果为布尔类型 and与print（a and b）两个都为非零时结果输出为最后一个，有0的话结果都是0 print(a or b)有一个是真直接输出该值，print(a==c or a<b)运用登入手机号或qq号
输出格式化%s %d %f
进制转换：bin（）二进制 oct()八进制 hex()十六进制 前缀0b二进制 0o二进制 0x十六进制 
位运算：针对二进制进行的运算 & | ^ << >> -
负数的二进制转换先求正的
《》左移如n=12 一位*2 二位*4 右移动n=12 一位//2 **最高优先级，括号可以改变优先级的顺序，如果false true 参与运算false 0 true 1如print（1+ture）=2
总结
1.算术运算符
2.赋值运算符 = += -= 3.比较运算符< > == != 4.逻辑运算符and or not 5.位运算符 & | ^- << >> -7的负数二进制
6.运算符的优先级：加（）可改变优先级的顺序
条件语句
if ..else..   if..elif..else....
if 条件的语句
abs()内置函数绝对值
导入函数随机值 imoprt random  ,ran=random.randint()
%还有格式化输出的意思 如user=name print('%s' %user)
格式：c=a if a<b else b 符合是c=a否则是b
自动类型转换：在python中，转换成为布尔值时，只有 0，'',"",(),[],{}会被转换成false,其它转换true
循环语句
1.while 2.for
while 条件：
  要循环的代码# 初始值
n=1
# 结束条件
while n<=10:
    print('--->n=%d'%n)
    #变量要有变化
    n +=1 
    while中加break跳出整个循环
   for i in range(1,10):range包括前不包括后，range(n):默认从0开始取值到n-1结束，range(start,stop):[start,stop），range(start,stop,step)步长
  for ..else.. while..esle 不被中断才会执行else
  for和while区别... for i in rande(n): pass 有固定的次数   while 条件：pass 不确定的次数循环
  掷色子
  while n<5:外层控制行数
    ...
    while m<n:
      print('*',end='')内层控制打印*
     n+=1
     print()
     切片操作
     id（）地址  is是比较两个的地址是否一致
     index索引
    find:从左向右查找，如果遇到一个结果符合要求的则返回位置，不符合要求返回-1，rfind从右开始查找
    count:统计指定字符的个数，index与find的区别，index也是表示查找，如果找不到会报错
    判断startswith,endswith,isalpha,判断是否以什么开头，返回值都是布尔类型
    ath='https://www.bing.com/images/s_earch?view=detailV2&ccid=s20ksC'
i=path.find('_')
print(i)
替换内容：replace(old,new,count)默认全部替换，count指定次数
切割字符：split,rsplit,splitlines,split('分隔符')返回的结果是一个列表
修改大小写：title，upper，lower
format()格式化，
添加append()
排序冒泡
num=[2,4,1,6,7,8,9,0]
for j in range(0,len(num)-1):#轮数
    for i in range(0,len(num)-1-j):#两两比较
        if num[i]>num[i+1]:
            a=num[i]
            num[i]=num[i+1]
            num[i+1]=a
 print(num)
 两数交换使用a,b=b,a
 排序用 sort和reverse反转

删除：pop, remove ,clear
pop(index)；根据下标删除列表中的元素，下标不要超出范围
remove()根据元素名称删除，如果删除的不存在则报错，如果列表中存在多个同名元素element,只删除遇到的第一个元素，后面的元素不会删除
insert（）找准位置添加 ，index()根据元素找到该元素的位置下标
查找
1.元素 in列表 返回bool类型
2，列表.index(元素)返回元素的下标位置，如果没有此元素报错3.列表.count(元素) 返回整数 返回值是0则表示不存在此元素 
numbers.sort(reverse=True)#默认升序的，可以通过reverse参数控制升序还是降序,numbers.reverse()单纯的进行反转没有排序
元组：
元组与列表相似，元组的元素不能进行修改，元组使用()，列表使用[] list() tuple[] 注意元组中只有一个元素时用逗号
元组可以和列表之间相互转换使用关键字list() 和tuple()
字典：{}
元素：键值对 注意：键是唯一的值允许重复  无下标切片
popitem() 返回值（key,value）从后往前删除,clear()清空
添加元素：字典名[key]=value ，key是唯一字典的，所以在添加的时候如果出现同名的key,后面的key对应的value则替换原来的，关键看"键"，如果字典中不存在键，则是添加，否则是修改
pop()
遍历和查询：
dict1={}
# print(type(dict1))
# dict1['name']='龙'
# print(dict1)
# book={}
# book['价格']=8
# book['作者']='梁飞'
# print(book)
# //字典的删除
# book={'书名':'人生简介','价格':38}
# r=book.popitem()
# print(r)
# # print(book)
# print(book)
# books=[{'书名':'三体','作者':'刘子欣','价格':'30'},{'书名':'流浪地球','作者':'梁飞','价格':'39'}]
# for book in books:
#     book.pop('书名')
# print(books)
# 遍历和查询
# 获取
# dict.get(key):根据key获取其value值
# dict[key]:根据key获取其value值
# 区别：get()的值如果不存在，返回默认值，dict[]报错
# book={'书名':'三体','作者':'刘子欣','价格':'30'}
# value=book.get('书名1','默认')

# 根据key得到value值
# print(value)
# value=book['书名']
# print(value)
# list1=[1,4,5,8,9]
# for i in list1:
#     print(i)
book={'书名':'三体','作者':'刘子欣','价格':'30'}
# 获取字典所有值 dist.values()

# for i in book.values():
# 获取字典的所有value值;字典.values(),将所有的值存放到了一个列表
#     print(i)
# print(list(book.values()))
# 如果使用for..in....直接遍历字典取出的是字典的key
# 获取字典所有值key:字典.keys()----['书名','价格','作者']
#     print(i)
# print(book.keys())
# for i in book.keys():
#     print(i)
# print(book.items())
# for i in book.items():
#     print(i)
# for k,v in book.items():
#     print(k,v)
# 获取键值对：字典.items() --->[(key,value),(),()]
# book.setdefault('出版社','人民教育出版社')
# print(book)
# book.setdefault('chu')
# 只能添加键值对，不能修改
# dict1={'a':10,'b':45}
# book.update(dict1)
# print(book)
# update()实现两个字典的合并
list:允许重复，有序，有下标[]
tuple:允许重复，里面的元素不能删除修改，只能查看（）
dict:键值对存在，键唯一，值允许重复{}
set:不允许重复，无序
类型转换
list-->tuple()


 
